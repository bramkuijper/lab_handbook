[["index.html", "Some writing advice Chapter 1 Introduction", " Some writing advice Bram Kuijper 2022-05-31 Chapter 1 Introduction This document gives you an overview of some of the key computing practices used in our lab. Enjoy! "],["installing-and-using-software-to-do-your-work.html", "Chapter 2 Installing and using software to do your work 2.1 On a Mac? Install your software using the Homebrew package manager 2.2 Rstudio 2.3 Installing Python 2.4 Using the Mac OS Terminal app 2.5 Installing software to develop C++ programs", " Chapter 2 Installing and using software to do your work To do your research in theoretical or computational biology, you will need to install a bunch of software. I typically try to keep things as free and open access as possible, so that you don’t have hassle with license fees. However, this is not always possible (e.g., research projects involving Mathematica or matlab). Don’t install all the software listed below - by now, you should have a clear idea what selection of software you need. If not, get in touch asap. 2.1 On a Mac? Install your software using the Homebrew package manager Homebrew is a small program that allows you to install and update multiple programs on your Mac simultaneously. Indeed, all research software that you will need on your Mac can be installed with homebrew. Using homebrew has the advantage that installation involves a single command, rather than you having to search for the correct version of the software online. Moreover, all installed packages will be updated to their latest versions by using two simple commands: brew update, following by brew upgrade. 2.1.1 Installing homebrew To install homebrew, you need to open the Terminal app (see here about where to find the Terminal app on your Mac). Once the terminal is open, copy the single-line install statement from the Homebrew website and paste it into the Terminal app. Then press ‘Enter’. You will get a bunch of straightforward questions, after which homebrew installs itself. 2.1.2 Installing your first application using homebrew After homebrew is installed, you can use it to install other applications. You can search for software available for install through homebrew by using the website formulae.brew.sh. Let us install the [Textmate] text editor that we might need later. We do so using the Terminal app app, in which we type brew install --cask textmate 2.1.3 Updating all applications that have been installed via homebrew This is where things get handier than installing all software individually: brew update &amp;&amp; brew upgrade 2.2 Rstudio Rather than using the absolute bare bones version of R, I’d use Rstudio as it provides a full-blown IDE (integrated development environment) with text editor, variable inspector, file browswer and more. You can either use the Rstudio server that is offered by the University of Exeter, or use a locally installed version of Rstudio. Personally, the server-based version of Rstudio is probably the easiest to use, as it already has tons of packages pre-installed. However, if you have no uni access anymore or don’t have continuous internet access, a locally installed version of Rstudio is best. 2.2.1 Using the web-based Rstudio server You can simply access this by using your web browser. You can access the Rstudio server here: https://rstudio01.cles.ex.ac.uk, using your University of Exeter login. Once logged in, make sure to run the 4.x.x version, rather than a 3.x.x version. You can change versions on the top right of your Rstudio window within in your web browser. By now 2.2.2 Installing Rstudio on your own computer on windows or mac If you have a Windows machine, the best way to install Rstudio is to download the Desktop version. If you are on a mac, one could use: brew install --cask rstudio 2.3 Installing Python You will need to install the Spyder IDE and associated packages. To this end, it is best to install Anaconda which provide the whole python bundle and comes with a package manager. 2.4 Using the Mac OS Terminal app On a Mac, a ‘Terminal’ application is available that allows you to execute UNIX shell commands on your computer. These are necessary You can find the Terminal app in the Applications &gt; Utilities folder. See Apple’s support page here for more information on how to open this application. 2.5 Installing software to develop C++ programs When working with the programming language C++, we will need to use the following software: A better-than-normal text editor. When on Windows, install the freely available text editor Notepad++. When on a mac, install textmate (see above). A C++ compiler. A software build environment like make or cmake. 2.5.1 Installing a C++ compiler Rather than using any C++ compiler like Visual Studio or Code Blocks, we use the compiler g++, as that compiler is the same as used on our computing clusters. This allows us to easily move back and forth between your local computer and the computing cluster, as we might well want to perform a large number of runs once everything is up and running. 2.5.1.1 Installing g++ on Windows To install this compiler, we use the MSYS2 environment. See here for the installation video. There is also another video that shows you how to subsequently work with the compiler, once installed. 2.5.1.2 Installing g++ on a Mac In order to install g++ on a Mac, you need to follow a bunch of instructions. "],["some-writing-tips.html", "Chapter 3 Some Writing Tips 3.1 Writing skills 3.2 Some examples of theory papers 3.3 Common examples where writing goes wrong", " Chapter 3 Some Writing Tips Writing your dissertation or literature review is a challenge. Here some advice: 3.1 Writing skills We all read books to improve our writing. Perhaps you should do too! If you want to get started on this, perhaps the short book by Mack (2018) might well be worth trying. This book is freely available online here. Another good book on how to write scientific papers is Gastel and Day (2022). Instead of focusing chiefly on scientific writing, it might be that you would like to improve your writing at a more general level too. Several good books are available. A first one is Williams (1990) which has later on appeared with different titles. Other books are Pinker (2014) and Zinsser (2006). Hard copies of most of these books are available at the library or in my office. Of course, you should not be looking around for pdfs of these books… 3.2 Some examples of theory papers Papers on theory are a bit different than empirical studies. Hence, here a bunch of examplesto see how theory papers are typically written: (Fawcett et al. 2007),(Trimmer et al. 2015),(Kahn, Jennions, and Kokko 2015). 3.3 Common examples where writing goes wrong 3.3.1 Back up qualitative statements Avoid sentences like “The random matrix method introduced by May 1977 has been highly important in theoretical ecology. Here we use this technique to understand how mutualisms affect ecosystem dynamics”. The first sentence makes a claim about importance, but does not back it up with a statement that indeed testifies of its importance (think: “as this approach has been central to the analysis of ecosystem stability in numerous theoretical studies [citations]”). But even then, you could argue that it still tells very little: why not tell us instead what the random matrix method is about and what it does?? 3.3.2 Being overly verbose Avoid sentences such as “Territory productivity can be measured by a variety of indirect and direct methods (Davies et al 2012). These measures of productivity can be used to calibrate simulation models.” Clearly, the mentioning of “indirect and direct methods” adds very little here. Why not give at least an example of an indirect and a direct method? Or perhaps scrap the indirect vs direct and just focus on ‘different methods’ and then give an example of such a method. Or if you realize the sentence on different methods adds too little, why not omit it altogether? 3.3.3 Make sure each paragraph addresses the broader question It is easy to get mired into examples or definition questions that are a bit particularly. Unless you make explicit why the paragraph contributes to insight about the broader question asked in your dissertation, consider what you are writing irrelevant. 3.3.4 Clearly label figures If you use a figure with different panels, each panel should have a label, such as “A”, “B”, “C”, etc. There are no excuses. If your R package does not do that, edit your figure in a graphics programme, or look at some of the queries about labeling figure panels in ggplot, for example here. 3.3.5 Reference all figures If you don’t refer to a figure in the text, you don’t need it. Throw it out. 3.3.6 Explain terminology upon first use Typically, assume that the audience is someone who knows quite something but is not necessarily a scientist. For example, a 2nd-year undergraduate. So any terminology needs to be explained, let alone any abbreviations upon first mentioning. 3.3.7 Various writing errors: It is evolutionarily stable strategy, not evolutionary stable strategy Temperature-related perturbations instead of temperature related perturbations "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
